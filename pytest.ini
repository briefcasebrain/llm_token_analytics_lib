[pytest]
# PyTest Configuration for LLM Token Analytics Library

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 6.0

# Add options that will be used by default
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=llm_token_analytics
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=20
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    performance: Performance and benchmark tests
    mock: Tests using mocked dependencies
    slow: Slow-running tests (> 5 seconds)
    network: Tests requiring network access
    api: Tests that make actual API calls
    edge_case: Edge case and boundary condition tests
    contract: Contract and interface enforcement tests
    schema: Data schema validation tests

# Test filtering
# Run only fast tests by default, use -m slow for slow tests
# pytest -m "not slow" for fast tests only
# pytest -m "slow" for slow tests only

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:matplotlib.*
    ignore::RuntimeWarning:scipy.*
    ignore::FutureWarning:pandas.*

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (requires pytest-timeout)
# timeout = 300
# timeout_method = thread

# Parallel execution settings (requires pytest-xdist)
# Run with: pytest -n auto
# Disabled by default, enable with -n flag